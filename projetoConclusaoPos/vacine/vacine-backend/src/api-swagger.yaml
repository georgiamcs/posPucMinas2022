openapi: 3.0.3
info:
  title: API para Clínica de Imunizacação - Vacine
  description: |-

    API para clínica de imunização Vacine.

     Faz autenticação, autorização e registro de usuários. Além disso, ainda possibilita a gestão de usuários, vacinas, fornecedores, vacinacões, compras e descartes de vacinas. 

    Esta API foi criada via Swagger com base na especificação OpenAPI 3.0. 

    Instruções:
     - Para acessar as funções pelo servidor 'API Servidor' ou 'API Desenvolvimento':
       1. Acessar a API de 'Autorização'.
       2. Utilizar o endpoint '/autenticacao/jwt' informando um usuário e senha válidos.
       3. Copiar o token da resposta.
       4. Clicar na função 'Authorize'.
       5. Informar o token recebido no passo 3.    
     - Para acessar as funções pelo servidor 'API Mock':
       1. Clicar na função 'Authorize'.
       2. Informar qualquer valor no campo 'value' para o token.

       
    Links úteis:
    - [Repositório do projeto](https://github.com/georgiamcs/posPucMinas2022)

  contact:
    name: desenvolvedor
    email: georgiamcs@gmail.com
  version: 1.0.0

externalDocs:
  description: Saiba mais sobre o projeto.
  url: https://github.com/georgiamcs/posPucMinas2022/blob/abdcee239d33c44189abade76db177e53b86597d/projetoConclusaoPos/tcc/TCC-Pos-GeorgiaMaria.docx
servers:
  - url: https://georgia2344.c42.integrator.host/mock/api
    description: API Mock
  - url: https://georgia2344.c42.integrator.host/api
    description: API Servidor
  - url: http://localhost:3005/api
    description: API Desenvolvimento
tags:
  - name: Autorização
    description: API relativa a autorização de acesso a API
  - name: Clientes
    description: API relativa a serviços para usuários do tipo clientes
  - name: Usuários
    description: API relativa a gestão de usuários
  - name: Vacinas
    description: API relativa a gestão de vacinas
  - name: Vacinações
    description: API relativa a gestão de vacinações
  - name: Descartes de vacinas
    description: API relativa a gestão de descartes de vacinas
  - name: Fornecedores de vacinas
    description: API relativa a gestão de fornecedores de vacinas
  - name: Compras de vacinas
    description: API relativa a gestão de compras de vacinas

paths:
  /autenticacao/jwt:
    post:
      tags:
        - Autorização
      summary: Efetua o login utilizando o padrão JWT (JSON Web Token)
      operationId: jwt
      requestBody:
        description: login e senha
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  description: email do usuário
                  example: georgiamcs@gmail.com
                senha:
                  type: string
                  description: senha do usuário
                  example: georgiamcs@gmail.com
              required:
                - email
                - senha

      responses:
        "200":
          description: Autenticação com sucesso
          content:
            application/json:
              schema:
                properties:
                  token:
                    type: string
                description: Token JWT gerado na autorização
                required:
                  - token
        "406":
          description: Usuário ou senha inválidos
        "500":
          description: Erro no processamento da requisição no servidor.

  /clientes/registrar:
    post:
      tags:
        - Clientes
      summary: Faz o registro de um usuário com perfil de cliente sem precisar estar logado no sistema
      operationId: registrarUsuario
      requestBody:
        required: true
        description: Dados do usuário a ser registrado
        content:
          application/json:
            schema:
              properties:
                nome:
                  type: string
                  description: Nome do usuário
                  example: "Geórgia Maria Carvalho de Sousa Galvão"
                email:
                  type: string
                  description: Email do usuário
                  example: "georgiamcs@gmail.com"
                senha:
                  type: string
                  description: Senha do usuário
                  example: "1234"
                cpf:
                  type: string
                  description: CPF do usuário
                  example: "12345678911"
                data_nascimento:
                  type: string
                  format: date-time
                  description: Data de nascimento do usuário
                endereco:
                  type: object
                  properties:
                    logradouro:
                      type: string
                      example: "Rua dos usuários"
                    numero:
                      type: string
                      example: "S/N"
                    complemento:
                      type: string
                      example: "Apto 501"
                tel_celular:
                  type: "string"
                  description: Telefone do celular do usuário com DDD
                  example: "81999194259"
                tel_fixo:
                  type: "string"
                  description: Telefone fixo do usuário com DDD
                  example: "8133695461"
              required:
                - nome,
                - email,
                - senha
      responses:
        "201":
          description: Registro criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        "409":
          description: Já existe registro com as mesmas características na base
        "500":
          description: Erro no processamento da requisição no servidor.

  /usuarios:
    get:
      tags:
        - Usuários
      summary: Retorna a lista de todos os usuários
      operationId: gettAllUsuarios
      responses:
        "200":
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Usuario"
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido.
        "403":
          description: Sem permissão para acessar o serviço.
        "500":
          description: Erro no processamento da requisição no servidor.
      security:
        - api_key:
            - write:usuario
            - read:usuario
    post:
      tags:
        - Usuários
      summary: Adiciona um novo usuário
      operationId: addUsuario
      requestBody:
        description: Dados do usuário para ser criado
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"

      responses:
        "201":
          description: Registro criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "409":
          description: Já existe registro com as mesmas características na base
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:usuario
            - read:usuario
  /usuarios/{id}:
    parameters:
      - name: id
        in: path
        description: Id do usuário
        required: true
        schema:
          type: string
    get:
      tags:
        - Usuários
      summary: Consulta um usuário pelo id
      operationId: getUsuario
      responses:
        "200":
          description: Operação com realizada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:usuarios
            - read:usuarios
    put:
      tags:
        - Usuários
      summary: Atualiza o usuário informado pelo id
      operationId: updateUsuario
      requestBody:
        description: Dados do usuário para ser atualizado
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"
      responses:
        "200":
          description: Operação realizada com sucesso
        "400":
          description: Id inválido.
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido.
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "409":
          description: Já existe registro com as mesmas características na base
        "500":
          description: Erro no processamento da requisição no servidor.
      security:
        - api_key:
            - write:usuarios
            - read:usuarios
    delete:
      tags:
        - Usuários
      summary: Exclui um usuário pelo id
      operationId: deleteUsuario
      responses:
        "200":
          description: Operação realizada com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:usuarios
            - read:usuarios
  /usuarios/trocarsenha/{id}:
    parameters:
      - name: id
        in: path
        description: Id do usuário
        required: true
        schema:
          type: string
    put:
      tags:
        - Usuários
      summary: Altera a senha do usuário
      operationId: trocarSenha
      requestBody:
        required: true
        description: Senha alterada
        content:
          application/json:
            schema:
              properties:
                senha:
                  type: string
                  description: Senha alterada do usuário
                  example: "georgiamcs@gmail.com"
              required:
                - senha
      responses:
        "200":
          description: Operação realizada com sucesso
        "400":
          description: Id inválido.
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido.
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor.
      security:
        - api_key:
            - write:usuarios
            - read:usuarios
  /usuarios/nome/{id}:
    parameters:
      - name: id
        in: path
        description: Id do usuário
        required: true
        schema:
          type: string
    get:
      tags:
        - Usuários
      summary: Consulta o nome de um usuário pelo id
      operationId: getNomeUsuario
      responses:
        "200":
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:usuarios
            - read:usuarios
  /usuarios/getByTipos:
    parameters:
      - name: tipos
        in: query
        description: Tipos de usuário a serem recuperados.
          Colocar os tipos separados por vírgula.
          Tipos possíveis ADMINISTRADOR = A, ANALISTA_COMPRAS = L, CLIENTE = C, SECRETARIA = S, TECNICO_ENFERMAGEM = T
        example: C, T
        required: true
        schema:
          type: string

    get:
      tags:
        - Usuários
      summary: Retorna a lista de todos os usuários que são dos tipos informados apenas como nome, id e CPF
      operationId: gettAllUsuariosPorTipo
      responses:
        "200":
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UsuarioRelacionamento"
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:usuario
            - read:usuario
  /usuarios/vacinacoes/{id}:
    parameters:
      - name: id
        in: path
        description: Id do usuário
        required: true
        schema:
          type: string
    get:
      tags:
        - Usuários
      summary: Retorna a lista de vacinacoes de um usuário por id
      operationId: getVacinacoesUsuario
      responses:
        "200":
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vacinacao"
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:usuarios
            - read:usuarios

  /vacinas:
    get:
      tags:
        - Vacinas
      summary: Retorna a lista de todas as vacinas
      operationId: gettAllVacinas
      responses:
        "200":
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vacina"
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:vacina
            - read:vacina
    post:
      tags:
        - Vacinas
      summary: Adiciona uma nova vacina
      operationId: addVacina
      requestBody:
        description: Dados da vacina a ser incluída
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vacina"

      responses:
        "201":
          description: Registro criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vacina"
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "409":
          description: Já existe registro com as mesmas características na base
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:vacina
            - read:vacina
  /vacinas/{id}:
    parameters:
      - name: id
        in: path
        description: Id da vacina
        required: true
        schema:
          type: string
    get:
      tags:
        - Vacinas
      summary: Consulta uma vacina pelo id
      operationId: getVacina
      responses:
        "200":
          description: Operação com realizada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vacina"
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:vacina
            - read:vacina
    put:
      tags:
        - Vacinas
      summary: Atualiza a vacina informada pelo id
      operationId: updateVacina
      requestBody:
        description: Dados da vacina para ser atualizada
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vacina"
      responses:
        "200":
          description: Operação realizada com sucesso
        "400":
          description: Id inválido.
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido.
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "409":
          description: Já existe registro com as mesmas características na base
        "500":
          description: Erro no processamento da requisição no servidor.
      security:
        - api_key:
            - write:vacina
            - read:vacina
    delete:
      tags:
        - Vacinas
      summary: Exclui uma vacina pelo id
      operationId: deleteVacina
      responses:
        "200":
          description: Operação realizada com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vacina"
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:vacina
            - read:vacina
  /vacinas/controle-estoque/{id}:
    parameters:
      - name: id
        in: path
        description: Id da vacina
        required: true
        schema:
          type: string
    get:
      tags:
        - Vacinas
      summary: Retorna o histórico do controle de estoque da vacina informada
      operationId: getContEstoqueVacina
      responses:
        "200":
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ControleEstoqueVacina"
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:estoque
            - read:estoque

  /vacinacoes:
    get:
      tags:
        - Vacinações
      summary: Retorna a lista de todas as vacinações
      operationId: gettAllVacinacoes
      responses:
        "200":
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vacinacao"
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:vacinacao
            - read:vacinacao
    post:
      tags:
        - Vacinações
      summary: Adiciona uma nova vacinação
      operationId: addVacinacao
      requestBody:
        description: Dados da vacinação a ser incluída
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vacinacao"

      responses:
        "201":
          description: Registro criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vacinacao"
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "409":
          description: Já existe registro com as mesmas características na base
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:vacinacao
            - read:vacinacao
  /vacinacoes/{id}:
    parameters:
      - name: id
        in: path
        description: Id da vacinacao
        required: true
        schema:
          type: string
    get:
      tags:
        - Vacinações
      summary: Consulta uma vacinação pelo id
      operationId: getVacinacao
      responses:
        "200":
          description: Operação com realizada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vacinacao"
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:vacinacoes
            - read:vacinacoes
    put:
      tags:
        - Vacinações
      summary: Atualiza a vacinação informada pelo id
      operationId: updateVacinacao
      requestBody:
        description: Dados da vacinação para ser atualizada
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vacinacao"
      responses:
        "200":
          description: Operação realizada com sucesso
        "400":
          description: Id inválido.
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido.
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "409":
          description: Já existe registro com as mesmas características na base
        "500":
          description: Erro no processamento da requisição no servidor.
      security:
        - api_key:
            - write:vacinacao
            - read:vacinacao
    delete:
      tags:
        - Vacinações
      summary: Exclui uma vacinação pelo id
      operationId: deleteVacinacao
      responses:
        "200":
          description: Operação realizada com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vacinacao"
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:vacinacoes
            - read:vacinacoes

  /descarte-vacinas:
    get:
      tags:
        - Descartes de vacinas
      summary: Retorna a lista de todos os descartes de vacinas
      operationId: gettAllDescartesVacinas
      responses:
        "200":
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DescarteVacina"
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:descartes
            - read:descartes
    post:
      tags:
        - Descartes de vacinas
      summary: Adiciona um novo descarte de vacina
      operationId: addDescarteVacina
      requestBody:
        description: Dados do descarte de vacina a ser incluído
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescarteVacina"

      responses:
        "201":
          description: Registro criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescarteVacina"
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "409":
          description: Já existe registro com as mesmas características na base
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:descartes
            - read:descartes
  /descarte-vacinas/{id}:
    parameters:
      - name: id
        in: path
        description: Id do descarte de vacina
        required: true
        schema:
          type: string
    get:
      tags:
        - Descartes de vacinas
      summary: Consulta um descarte de vacina pelo id
      operationId: getDescarteVacina
      responses:
        "200":
          description: Operação com realizada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescarteVacina"
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:descartes
            - read:descartes
    put:
      tags:
        - Descartes de vacinas
      summary: Atualiza um descarte de vacina informado pelo id
      operationId: updateDescarteVacina
      requestBody:
        description: Dados do descarte de vacina para ser atualizada
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescarteVacina"
      responses:
        "200":
          description: Operação realizada com sucesso
        "400":
          description: Id inválido.
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido.
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "409":
          description: Já existe registro com as mesmas características na base
        "500":
          description: Erro no processamento da requisição no servidor.
      security:
        - api_key:
            - write:descartes
            - read:descartes
    delete:
      tags:
        - Descartes de vacinas
      summary: Exclui um descarte de vacina pelo id
      operationId: deleteDescarteVacina
      responses:
        "200":
          description: Operação realizada com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescarteVacina"
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:descartes
            - read:descartes

  /fornecedores:
    get:
      tags:
        - Fornecedores de vacinas
      summary: Retorna a lista de todos os fornecedores
      operationId: gettAllFornecedores
      responses:
        "200":
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Fornecedor"
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:fornecedor
            - read:fornecedor
    post:
      tags:
        - Fornecedores de vacinas
      summary: Adiciona um novo fornecedor
      operationId: addFornecedor
      requestBody:
        description: Dados do fornecedor a ser incluído
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Fornecedor"

      responses:
        "201":
          description: Registro criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vacina"
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "409":
          description: Já existe registro com as mesmas características na base
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:fornecedor
            - read:fornecedor
  /fornecedores/{id}:
    parameters:
      - name: id
        in: path
        description: Id do fornecedor
        required: true
        schema:
          type: string
    get:
      tags:
        - Fornecedores de vacinas
      summary: Consulta um fornecedor pelo id
      operationId: getFornecedor
      responses:
        "200":
          description: Operação com realizada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fornecedor"
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:fornecedor
            - read:fornecedor
    put:
      tags:
        - Fornecedores de vacinas
      summary: Atualiza o fornecedor informado pelo id
      operationId: updateFornecedor
      requestBody:
        description: Dados do fornecedor para ser atualizado
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Fornecedor"
      responses:
        "200":
          description: Operação realizada com sucesso
        "400":
          description: Id inválido.
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido.
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "409":
          description: Já existe registro com as mesmas características na base
        "500":
          description: Erro no processamento da requisição no servidor.
      security:
        - api_key:
            - write:fornecedor
            - read:fornecedor
    delete:
      tags:
        - Fornecedores de vacinas
      summary: Exclui um fornecedor pelo id
      operationId: deleteFornecedor
      responses:
        "200":
          description: Operação realizada com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fornecedor"
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:fornecedor
            - read:fornecedor

  /compras-vacinas:
    get:
      tags:
        - Compras de vacinas
      summary: Retorna a lista de todas as compras de vacinas
      operationId: gettAllCompraVacina
      responses:
        "200":
          description: Operação realizada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompraVacina"
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:compras
            - read:compras
    post:
      tags:
        - Compras de vacinas
      summary: Adiciona uma nova compra de vacina
      operationId: addVacinacaoCompraVacina
      requestBody:
        description: Dados da compra da vacina a ser incluída
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompraVacina"

      responses:
        "201":
          description: Registro criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompraVacina"
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "409":
          description: Já existe registro com as mesmas características na base
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:compras
            - read:compras
  /compras-vacinas/{id}:
    parameters:
      - name: id
        in: path
        description: Id da compra da vacina
        required: true
        schema:
          type: string
    get:
      tags:
        - Compras de vacinas
      summary: Consulta uma compra de vacina pelo id
      operationId: getCompraVacina
      responses:
        "200":
          description: Operação com realizada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompraVacina"
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:compras
            - read:compras
    put:
      tags:
        - Compras de vacinas
      summary: Atualiza a compra de vacina informada pelo id
      operationId: updateCompraVacina
      requestBody:
        description: Dados da compra da vacina para ser atualizada
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompraVacina"
      responses:
        "200":
          description: Operação realizada com sucesso
        "400":
          description: Id inválido.
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido.
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "409":
          description: Já existe registro com as mesmas características na base
        "500":
          description: Erro no processamento da requisição no servidor.
      security:
        - api_key:
            - write:compras
            - read:compras
    delete:
      tags:
        - Compras de vacinas
      summary: Exclui uma compra de vacina pelo id
      operationId: deleteCompraVacina
      responses:
        "200":
          description: Operação realizada com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vacinacao"
        "400":
          description: Id inválido
        "401":
          description: Acesso não autorizado. Token de autorização não informado ou inválido
        "403":
          description: Sem permissão para acessar o serviço
        "404":
          description: Registro não localizado
        "500":
          description: Erro no processamento da requisição no servidor
      security:
        - api_key:
            - write:compras
            - read:compras

components:
  schemas:
    Usuario:
      required:
        - _id
        - tipo
        - nome
        - email
        - senha
        - perfil_acesso
        - dt_inclusao
        - __v
      type: object
      properties:
        _id:
          type: string
          description: Id do usuário
          example: "37dc9c85fd018a07bd7eec24"
          readOnly: true
        tipo:
          type: string
          description: Código do tipo do usuário. Domínio => ADMINISTRADOR = A, ANALISTA_COMPRAS = L, CLIENTE = C, SECRETARIA = S, TECNICO_ENFERMAGEM = T,
          example: "S"
        nome:
          type: string
          description: Nome do usuário
          example: "Geórgia Maria Carvalho de Sousa Galvão"
        email:
          type: string
          description: Email do usuário
          example: "georgiamcs@gmail.com"
        senha:
          type: string
          description: Senha do usuário
          example: "123456"
        cpf:
          type: string
          description: CPF do usuário
          example: "12345678911"
        data_nascimento:
          type: string
          format: date-time
          description: Data de nascimento do usuário
        endereco:
          type: object
          properties:
            logradouro:
              type: string
              example: "Rua dos usuários"
            numero:
              type: string
              example: "S/N"
            complemento:
              type: string
              example: "Apto 501"
            cidade:
              type: string
              example: "Recife"
            estado:
              type: string
              example: "PE"
            cep:
              type: string
              example: "52060123"
        tel_celular:
          type: "string"
          description: Telefone do celular do usuário com DDD
          example: "81999194259"
        tel_fixo:
          type: "string"
          description: Telefone fixo do usuário com DDD
          example: "8133695461"
        perfil_acesso:
          type: string
          description: Nome do perfil de acesso do usuário
          example: "SECRETARIA"
          readOnly: true
        dt_inclusao:
          type: string
          format: date-time
          description: Data da inclusão do registro
          readOnly: true
        dt_alteracao:
          type: string
          format: date-time
          description: Data da alteração do registro
          readOnly: true
        __v:
          type: integer
          description: Código de controle de versão do banco de dados
          example: 0
          readOnly: true

    UsuarioAutenticado:
      required:
        - _id
        - nome
        - email
        - perfil_acesso
        - autorizacoes
      type: object
      properties:
        _id:
          type: string
          description: Id do usuário
          example: "37dc9c85fd018a07bd7eec24"
          readOnly: true
        nome:
          type: string
          description: Nome do usuário
          example: "Geórgia Maria Carvalho de Sousa Galvão"
          readOnly: true
        email:
          type: string
          description: Email do usuário
          example: "georgiamcs@gmail.com"
          readOnly: true
        perfil_acesso:
          type: string
          description: Nome do perfil de acesso do usuário
          example: "SECRETARIA"
          readOnly: true
        autorizacoes:
          type: array
          description: "Autorizações do usuário aos temas da aplicação"
          items:
            $ref: "#/components/schemas/ItemAutorizacaoUsuario"
          readOnly: true

    UsuarioRelacionamento:
      required:
        - _id
        - nome
      type: object
      properties:
        _id:
          type: string
          description: Id do usuário
          example: "37dc9c85fd018a07bd7eec24"
        nome:
          type: string
          description: Nome do usuário
          example: "Geórgia Maria Carvalho de Sousa Galvão"
        cpf:
          type: string
          description: CPF do usuário
          example: "12345678911"

    ItemAutorizacaoUsuario:
      required:
        - tema
        - tiposAcesso
      type: object
      properties:
        tema:
          type: string
          description: Identificador do  tema relacionado ao acesso do usuário
          example: "V"
        tiposAcesso:
          type: array
          description: Array com os tipos de acesso do usuário em relação ao tema
          items:
            type: string

    Vacina:
      required:
        - _id
        - nome
        - protecao_contra
        - composicao
        - qtd_doses_estoque
        - vl_atual_unit_dose
      type: object
      properties:
        _id:
          type: string
          description: Id do usuário
          example: "6400091a4390d93c928c494e"
          readOnly: true
        nome:
          type: string
          description: Nome da vacina
          example: "Gripe (4)"
        protecao_contra:
          type: string
          description: Para que a vacina protege
          example: "Gripe"
        composicao:
          type: string
          description: Composição da vacina
          example: "Vírus inativado"
        qtd_doses_estoque:
          type: number
          description: Quatidade de doses atualmente em estoque
          example: 20
        vl_atual_unit_dose:
          type: number
          description: Valor unitário da dose
          example: 500.40
        dt_inclusao:
          type: string
          format: date-time
          description: Data da inclusão do registro
          readOnly: true
        dt_alteracao:
          type: string
          format: date-time
          description: Data da alteração do registro
          readOnly: true

    ControleEstoqueVacina:
      required:
        - _id
        - vacina
        - usuario
        - data_evento
        - tipo_evento
        - tipo_motivo
        - id_entidade_relac_evento
        - qtd_estoque_antes
        - qtd_estoque_depois
        - dt_inclusao
        - __v
      type: object
      properties:
        _id:
          type: string
          description: Id do regstro do controle de estoque
          example: "6400091a4390d93c928c494e"
          readOnly: true
        vacina:
          $ref: "#/components/schemas/VacinaRelacionamento"
          readOnly: true
        usuario:
          $ref: "#/components/schemas/UsuarioRelacionamento"
          readOnly: true
        data_evento:
          type: string
          format: date-time
          description: Data do evento
          readOnly: true
        tipo_evento:
          type: string
          description: Tipo do evento no estoque. Entrada = E, Saída = S
          example: "E"
          readOnly: true
        tipo_motivo:
          type: string
          description: Tipo que motivou a alteração do estoque. CADASTRO_INICIAL = I,DESCARTE = D,VACINACAO = V,COMPRA = C,AJUSTE_ESTOQUE = A,ALTERACAO_COMPRA = AC,ALTERACAO_VACINACAO = AV,ALTERACAO_DESCARTE = AD,EXCLUSAO_COMPRA = EC,EXCLUSAO_VACINACAO = EV,EXCLUSAO_DESCARTE = ED,
          example: "I"
          readOnly: true
        descricao_evento:
          type: string
          description: TDescrição do evento que motivou a alteração do estoque
          example: "Compra nota fiscal 123"
          readOnly: true
        id_entidade_relac_evento:
          type: string
          description: Id da entidade que motivou a alteração do estoque
          example: "6400091a4390d93c928c494e"
          readOnly: true
        qtd_estoque_antes:
          type: number
          description: Quantidade do estoque antes do evento
          example: 100
          readOnly: true
        qtd_estoque_depois:
          type: number
          description: Quantidade do estoque depois do evento
          example: 150
          readOnly: true
        dt_inclusao:
          type: string
          format: date-time
          description: Data da inclusão do registro
          readOnly: true
        dt_alteracao:
          type: string
          format: date-time
          description: Data da alteração do registro
          readOnly: true
        __v:
          type: integer
          description: Código de controle de versão do banco de dados
          example: 0
          readOnly: true

    Vacinacao:
      required:
        - _id
        - codigo
        - usuario_resp_cadastro
        - usuario_cliente
        - usuario_aplicador_vacina
        - data_aplicacao
        - vl_total
        - dt_inclusao
        - itens_vacinacao
        - __v
      type: object
      properties:
        _id:
          type: string
          description: Id da vacinação
          example: "37dc9c85fd018a07bd7eec24"
          readOnly: true
        codigo:
          type: string
          description: Código da vacinação
          example: "V2345"
        usuario_resp_cadastro:
          $ref: "#/components/schemas/UsuarioRelacionamento"
        usuario_cliente:
          $ref: "#/components/schemas/UsuarioRelacionamento"
        usuario_aplicador_vacina:
          $ref: "#/components/schemas/UsuarioRelacionamento"
        data_aplicacao:
          type: string
          format: date-time
          description: Data da aplicação da vacina
        vl_total:
          type: "number"
          description: Valor total cobrado pela vacinação
          example: 1410.01
        itens_vacinacao:
          type: "array"
          items:
            $ref: "#/components/schemas/ItemVacinacao"
        dt_inclusao:
          type: string
          format: date-time
          description: Data da inclusão do registro
          readOnly: true
        dt_alteracao:
          type: string
          format: date-time
          description: Data da alteração do registro
          readOnly: true
        __v:
          type: integer
          description: Código de controle de versão do banco de dados
          example: 0
          readOnly: true

    VacinaRelacionamento:
      required:
        - _id
        - nome
        - protecao_contra
      type: object
      properties:
        _id:
          type: string
          description: Id da vacina
          example: "6400091a4390d93c928c494e"
        nome:
          type: string
          description: Nome da vacina
          example: "Difteria e Tétano (dT)"
        protecao_contra:
          type: string
          description: Descrição de para quais doenças a vacina protege
          example: "Difteria e Tétano"

    ItemVacinacao:
      required:
        - vacina
        - lote
        - data_validade
        - qtd_doses
        - vl_item
      type: object
      properties:
        vacina:
          $ref: "#/components/schemas/VacinaRelacionamento"
        lote:
          type: string
          description: Lote da vacina
          example: "L2365"
        data_validade:
          type: string
          format: date-time
          description: Data de validade da vacina
        qtd_doses:
          type: number
          description: Quantidade de doses aplicadas
          example: 1
        vl_item:
          type: number
          description: Valor da vacina aplicada
          example: 100

    ItemDescarte:
      required:
        - vacina
        - lote
        - qtd_doses_descarte
      type: object
      properties:
        vacina:
          $ref: "#/components/schemas/VacinaRelacionamento"
        lote:
          type: string
          description: Lote da vacina
          example: "L2365"
        qtd_doses_descarte:
          type: number
          description: Quantidade de doses descartadas
          example: 10

    ItemCompra:
      required:
        - vacina
        - lote
        - qtd_frascos
        - qtd_doses
        - data_validade
        - vl_total_item_compra
      type: object
      properties:
        vacina:
          $ref: "#/components/schemas/VacinaRelacionamento"
        lote:
          type: string
          description: Lote da vacina
          example: "L2365"
        qtd_frascos:
          type: number
          description: Quantidade de frascos comprados
          example: 1
        qtd_doses:
          type: number
          description: Quantidade de doses compradas
          example: 10
        data_validade:
          type: string
          format: date-time
          description: Data de validade da vacina
        vl_total_item_compra:
          type: number
          description: Valor da vacina aplicada
          example: 100

    DescarteVacina:
      required:
        - _id
        - codigo
        - usuario_resp_descarte
        - data_descarte
        - motivo_descarte
        - justificativa_descarte
        - local_descarte
        - itens_descarte
        - dt_inclusao
        - __v
      type: object
      properties:
        _id:
          type: string
          description: Id do descarte de vacina
          example: "37dc9c85fd018a07bd7eec24"
          readOnly: true
        codigo:
          type: string
          description: Código do descarte de vacina
          example: "D2345"
        usuario_resp_descarte:
          $ref: "#/components/schemas/UsuarioRelacionamento"
        data_descarte:
          type: string
          format: date-time
          description: Data do descarte da vacina
        motivo_descarte:
          type: string
          description: Motivo do descarte de vacina. EXPIRACAO = E, ARMAZENAMENTO = A, CONTAMINACAO = C, DANO_FISICO = F, USO_IMPROPRIO = U, DESPERDICIO = D, RECUSA_PACIENTE = R, OUTRO = O,
          example: "E"
        justificativa_descarte:
          type: string
          description: Justificativa do descarte de vacina
          example: "Prazo de validade próximo"
        local_descarte:
          type: string
          description: Local do descarte de vacina
          example: "Lixo hospitalar"
        itens_descarte:
          type: "array"
          items:
            $ref: "#/components/schemas/ItemDescarte"
        dt_inclusao:
          type: string
          format: date-time
          description: Data da inclusão do registro
          readOnly: true
        dt_alteracao:
          type: string
          format: date-time
          description: Data da alteração do registro
          readOnly: true
        __v:
          type: integer
          description: Código de controle de versão do banco de dados
          example: 0
          readOnly: true

    Fornecedor:
      required:
        - _id
        - nome
        - email
        - cnpj
        - endereco.logradouro
        - endereco.numero
        - endereco.cidade
        - endereco.estado
        - endereco.cep
        - tel_celular
        - dt_inclusao
        - __v
      type: object
      properties:
        _id:
          type: string
          description: Id do fornecedor
          example: "37dc9c85fd018a07bd7eec24"
          readOnly: true
        nome:
          type: string
          description: Nome do fornecedor
          example: "Pfizer"
        email:
          type: string
          description: Email do fornecedor
          example: "pfizer@gmail.com"
        cnpj:
          type: string
          description: CNPJ do fornecedor
          example: "12345678911123"
        endereco:
          type: object
          properties:
            logradouro:
              type: string
              example: "Rua dos fornecedores"
            numero:
              type: string
              example: "S/N"
            complemento:
              type: string
              example: "Apto 501"
            cidade:
              type: string
              example: "Recife"
            estado:
              type: string
              example: "PE"
            cep:
              type: string
              example: "52060123"
        tel_celular:
          type: "string"
          description: Telefone do celular do fornecedor com DDD
          example: "81999194259"
        tel_fixo:
          type: "string"
          description: Telefone fixo do fornecedor com DDD
          example: "8133695461"
        dt_inclusao:
          type: string
          format: date-time
          description: Data da inclusão do registro
          readOnly: true
        dt_alteracao:
          type: string
          format: date-time
          description: Data da alteração do registro
          readOnly: true
        __v:
          type: integer
          description: Código de controle de versão do banco de dados
          example: 0
          readOnly: true

    FornecedorRelacionamento:
      required:
        - _id
        - nome
        - cnpj
      type: object
      properties:
        _id:
          type: string
          description: Id do fornecedor
          example: "37dc9c85fd018a07bd7eec24"
        nome:
          type: string
          description: Nome do fornecedor
          example: "Pfizer Boa Demais"
        cnpj:
          type: string
          description: CNPJ do fornecedor
          example: "12345678911245"

    CompraVacina:
      required:
        - _id
        - nota_fiscal
        - fornecedor
        - data_compra
        - vl_total_compra
        - itens_compra
        - dt_inclusao
        - __v
      type: object
      properties:
        _id:
          type: string
          description: Id da compra
          example: "37dc9c85fd018a07bd7eec24"
          readOnly: true
        nota_fiscal:
          type: string
          description: Nota fiscal da compra
          example: "V2345"
        fornecedor:
          $ref: "#/components/schemas/FornecedorRelacionamento"
        data_compra:
          type: string
          format: date-time
          description: Data da compra da vacina
        vl_total_compra:
          type: "number"
          description: Valor total cobrado pela compra
          example: 1410.01
        itens_compra:
          type: "array"
          items:
            $ref: "#/components/schemas/ItemCompra"
        dt_inclusao:
          type: string
          format: date-time
          description: Data da inclusão do registro
          readOnly: true
        dt_alteracao:
          type: string
          format: date-time
          description: Data da alteração do registro
          readOnly: true
        __v:
          type: integer
          description: Código de controle de versão do banco de dados
          example: 0
          readOnly: true

  securitySchemes:
    api_key:
      type: http
      scheme: bearer
      bearerFormat: JWT
